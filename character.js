"use strict";
window.clock = window.clock || {};

function PixelChars() {
	this.char_sm = {
		A: [[0, 1, 0],
				[1, 0, 1],
				[1, 1, 1],
				[1, 0, 1],
				[1, 0, 1]],

		B: [[1, 1, 0],
				[1, 0, 1],
				[1, 1, 0],
				[1, 0, 1],
				[1, 1, 0]],

		C: [[1, 1, 1],
				[1, 0, 1],
				[1, 0, 0],
				[1, 0, 1],
				[1, 1, 1]],

		D: [[1, 1, 0],
				[1, 0, 1],
				[1, 0, 1],
				[1, 0, 1],
				[1, 1, 0]],

		E: [[1, 1, 1],
				[1, 0, 0],
				[1, 1, 0],
				[1, 0, 0],
				[1, 1, 1]],

		F: [[1, 1, 1],
				[1, 0, 0],
				[1, 1, 0],
				[1, 0, 0],
				[1, 0, 0]],
		
		G: [[1, 1, 1, 1],
				[1, 0, 0, 0],
				[1, 0, 1, 1],
				[1, 0, 0, 1],
				[1, 1, 1, 0]],

		H: [[1, 0, 1],
				[1, 0, 1],
				[1, 1, 1],
				[1, 0, 1],
				[1, 0, 1]],

		I: [[1, 1, 1],
				[0, 1, 0],
				[0, 1, 0],
				[0, 1, 0],
				[1, 1, 1]],

		J: [[0, 1, 1],
				[0, 0, 1],
				[0, 0, 1],
				[1, 0, 1],
				[1, 1, 1]],

		K: [[1, 0, 1],
				[1, 0, 1],
				[1, 1, 0],
				[1, 0, 1],
				[1, 0, 1]],

		L: [[1, 0, 0],
				[1, 0, 0],
				[1, 0, 0],
				[1, 0, 0],
				[1, 1, 1]],

		M: [[1, 0, 0, 0, 1],
				[1, 1, 0, 1, 1],
				[1, 0, 1, 0, 1],
				[1, 0, 0, 0, 1],
				[1, 0, 0, 0, 1]],

		N: [[1, 0, 0, 1],
				[1, 1, 0, 1],
				[1, 0, 1, 1],
				[1, 0, 0, 1],
				[1, 0, 0, 1]],

		O: [[1, 1, 1],
				[1, 0, 1],
				[1, 0, 1],
				[1, 0, 1],
				[1, 1, 1]],

		P: [[1, 1, 1],
				[1, 0, 1],
				[1, 1, 1],
				[1, 0, 0],
				[1, 0, 0]],

		Q: [[0, 1, 1, 0, 0],
				[1, 0, 0, 1, 0],
				[1, 0, 0, 1, 0],
				[1, 0, 0, 1, 0],
				[0, 1, 1, 0, 1]],

		R: [[1, 1, 1],
				[1, 0, 1],
				[1, 1, 0],
				[1, 0, 1],
				[1, 0, 1]],

		S: [[1, 1, 1],
				[1, 0, 0],
				[1, 1, 1],
				[0, 0, 1],
				[1, 1, 1]],

		T: [[1, 1, 1],
				[0, 1, 0],
				[0, 1, 0],
				[0, 1, 0],
				[0, 1, 0]],

		U: [[1, 0, 1],
				[1, 0, 1],
				[1, 0, 1],
				[1, 0, 1],
				[1, 1, 1]],

		V: [[1, 0, 1],
				[1, 0, 1],
				[1, 0, 1],
				[1, 0, 1],
				[0, 1, 0]],

		W: [[1, 0, 0, 0, 1],
				[1, 0, 0, 0, 1],
				[1, 0, 1, 0, 1],
				[1, 0, 1, 0, 1],
				[0, 1, 0, 1, 0]],

		X: [[1, 0, 1],
				[1, 0, 1],
				[0, 1, 0],
				[1, 0, 1],
				[1, 0, 1]],

		Y: [[1, 0, 1],
				[1, 0, 1],
				[0, 1, 0],
				[0, 1, 0],
				[0, 1, 0]],

		Z: [[1, 1, 1],
				[0, 0, 1],
				[0, 1, 0],
				[1, 0, 0],
				[1, 1, 1]],

		one: [[0, 1, 0],
					[1, 1, 0],
					[0, 1, 0],
					[0, 1, 0],
					[1, 1, 1]],

		two: [[1, 1, 1],
					[0, 0, 1],
					[1, 1, 1],
					[1, 0, 0],
					[1, 1, 1]],

		three: [[1, 1, 1],
						[0, 0, 1],
						[1, 1, 1],
						[0, 0, 1],
						[1, 1, 1]],

		four: [[1, 0, 1],
					 [1, 0, 1],
					 [1, 1, 1],
					 [0, 0, 1],
					 [0, 0, 1]],

		five: [[1, 1, 1],
					 [1, 0, 0],
					 [1, 1, 1],
					 [0, 0, 1],
					 [1, 1, 1]],

		six: [[1, 1, 1],
					[1, 0, 0],
					[1, 1, 1],
					[1, 0, 1],
					[1, 1, 1]],

		seven: [[1, 1, 1],
						[0, 0, 1],
						[0, 1, 0],
						[1, 0, 0],
						[1, 0, 0]],

		eight: [[1, 1, 1],
						[1, 0, 1],
						[1, 1, 1],
						[1, 0, 1],
						[1, 1, 1]],

		nine: [[1, 1, 1],
					 [1, 0, 1],
					 [1, 1, 1],
					 [0, 0, 1],
					 [1, 1, 1]],
				 
		zero: [[1, 1, 1],
				   [1, 0, 1],
				   [1, 0, 1],
				   [1, 0, 1],
				   [1, 1, 1]],

		colon: [[0, 0, 0],
						[0, 1, 0],
						[0, 0, 0],
						[0, 1, 0],
						[0, 0, 0]],

		degree: [[1, 1],
						 [1, 1],
						 [0, 0],
						 [0, 0],
						 [0, 0]]
	};

	this.char_md = {
		A: [[0, 1, 1, 1, 0],
				[1, 0, 0, 0, 1],
				[1, 0, 0, 0, 1],
				[1, 1, 1, 1, 1],
				[1, 0, 0, 0, 1],
				[1, 0, 0, 0, 1],
				[1, 0, 0, 0, 1]],

		B: [[1, 1, 1, 1, 0],
				[1, 0, 0, 0, 1],
				[1, 0, 0, 0, 1],
				[1, 1, 1, 1, 0],
				[1, 0, 0, 0, 1],
				[1, 0, 0, 0, 1],
				[1, 1, 1, 1, 0]],

		C: [[0, 1, 1, 1, 0],
				[1, 0, 0, 0, 1],
				[1, 0, 0, 0, 0],
				[1, 0, 0, 0, 0],
				[1, 0, 0, 0, 0],
				[1, 0, 0, 0, 1],
				[0, 1, 1, 1, 0]],

		D: [[1, 1, 1, 1, 0],
				[1, 0, 0, 0, 1], 
				[1, 0, 0, 0, 1], 
				[1, 0, 0, 0, 1], 
				[1, 0, 0, 0, 1], 
				[1, 0, 0, 0, 1], 
				[1, 1, 1, 1, 0]],

		E: [[1, 1, 1, 1, 1],
				[1, 0, 0, 0, 0],
				[1, 0, 0, 0, 0],
				[1, 1, 1, 0, 0],
				[1, 0, 0, 0, 0],
				[1, 0, 0, 0, 0],
				[1, 1, 1, 1, 1]],

		F: [[1, 1, 1, 1, 1],
				[1, 0, 0, 0, 0],
				[1, 0, 0, 0, 0],
				[1, 1, 1, 0, 0], 
				[1, 0, 0, 0, 0],
				[1, 0, 0, 0, 0],
				[1, 0, 0, 0, 0]],

		G: [[0, 1, 1, 1, 0],
				[1, 0, 0, 0, 1],
				[1, 0, 0, 0, 0],
				[1, 0, 0, 0, 0],
				[1, 0, 0, 1, 1],
				[1, 0, 0, 0, 1],
				[0, 1, 1, 1, 0]],

		H: [[1, 0, 0, 0, 1],
				[1, 0, 0, 0, 1],
				[1, 0, 0, 0, 1],
				[1, 1, 1, 1, 1],
				[1, 0, 0, 0, 1],
				[1, 0, 0, 0, 1],
				[1, 0, 0, 0, 1]],

		I: [[0, 1, 1, 1, 0],
				[0, 0, 1, 0, 0],
				[0, 0, 1, 0, 0],
				[0, 0, 1, 0, 0],
				[0, 0, 1, 0, 0],
				[0, 0, 1, 0, 0],
				[0, 1, 1, 1, 0]],

		J: [[0, 0, 1, 1, 1],
				[0, 0, 0, 1, 0],
				[0, 0, 0, 1, 0],
				[0, 0, 0, 1, 0],
				[0, 0, 0, 1, 0],
				[1, 0, 0, 1, 0],
				[0, 1, 1, 0, 0]],

		K: [[1, 0, 0, 0, 1],
				[1, 0, 0, 1, 0],
				[1, 0, 1, 0, 0],
				[1, 1, 0, 0, 0],
				[1, 0, 1, 0, 0],
				[1, 0, 0, 1, 0],
				[1, 0, 0, 0, 1]],

		L: [[1, 0, 0, 0, 0],
				[1, 0, 0, 0, 0],
				[1, 0, 0, 0, 0],
				[1, 0, 0, 0, 0],
				[1, 0, 0, 0, 0],
				[1, 0, 0, 0, 0],
				[1, 1, 1, 1, 1]],

		M: [[1, 0, 0, 0, 1],
				[1, 1, 0, 1, 1],
				[1, 0, 1, 0, 0],
				[1, 0, 1, 0, 0],
				[1, 0, 0, 0, 1],
				[1, 0, 0, 0, 1],
				[1, 0, 0, 0, 1]],

		N: [[1, 0, 0, 0, 1],
				[1, 0, 0, 0, 1],
				[1, 1, 0, 0, 1],
				[1, 0, 1, 0, 1], 
				[1, 0, 0, 1, 1],
				[1, 0, 0, 0, 1],
				[1, 0, 0, 0, 1]],

		O: [[0, 1, 1, 1, 0], 
				[1, 0, 0, 0, 1],
				[1, 0, 0, 0, 1],
				[1, 0, 0, 0, 1],
				[1, 0, 0, 0, 1],
				[1, 0, 0, 0, 1],
				[0, 1, 1, 1, 0]],

		P: [[1, 1, 1, 1, 0],
				[1, 0, 0, 0, 1],
				[1, 0, 0, 0, 1],
				[1, 1, 1, 1, 0],
				[1, 0, 0, 0, 0],
				[1, 0, 0, 0, 0],
				[1, 0, 0, 0, 0]],

		Q: [[0, 1, 1, 1, 0],
				[1, 0, 0, 0, 1],
				[1, 0, 0, 0, 1],
				[1, 0, 0, 0, 1],
				[1, 0, 1, 0, 1],
				[1, 0, 0, 1, 0],
				[0, 1, 1, 0, 1]],

		R: [[1, 1, 1, 1, 0],
				[1, 0, 0, 0, 1],
				[1, 0, 0, 0, 1],
				[1, 1, 1, 1, 0],
				[1, 0, 1, 0, 0],
				[1, 0, 0, 1, 0],
				[1, 0, 0, 0, 1]],

		S: [[0, 1, 1, 1, 0],
				[1, 0, 0, 0, 1],
				[1, 0, 0, 0, 0],
				[0, 1, 1, 1, 0],
				[0, 0, 0, 0, 1],
				[1, 0, 0, 0, 1],
				[0, 1, 1, 1, 0]],

		T: [[1, 1, 1, 1, 1],
				[0, 0, 1, 0, 0],
				[0, 0, 1, 0, 0],
				[0, 0, 1, 0, 0],
				[0, 0, 1, 0, 0],
				[0, 0, 1, 0, 0],
				[0, 0, 1, 0, 0]],

		U: [[1, 0, 0, 0, 1],
				[1, 0, 0, 0, 1],
				[1, 0, 0, 0, 1],
				[1, 0, 0, 0, 1],
				[1, 0, 0, 0, 1],
				[1, 0, 0, 0, 1],
				[0, 1, 1, 1, 0]],

		V: [[1, 0, 0, 0, 1],
				[1, 0, 0, 0, 1],
				[1, 0, 0, 0, 1],
				[1, 0, 0, 0, 1],
				[0, 1, 0, 1, 0], 
				[0, 1, 0, 1, 0], 
				[0, 0, 1, 0, 0]],

		W: [[1, 0, 0, 0, 1],
				[1, 0, 0, 0, 1],
				[1, 0, 0, 0, 1],
				[1, 0, 1, 0, 1],
				[1, 0, 1, 0, 1],
				[1, 0, 1, 0, 1],
				[0, 1, 0, 1, 0]],

		X: [[1, 0, 0, 0, 1],
				[1, 0, 0, 0, 1],
				[0, 1, 0, 1, 0],
				[0, 0, 1, 0, 0],
				[0, 1, 0, 1, 0],
				[1, 0, 0, 0, 1],
				[1, 0, 0, 0, 1]],

		Y: [[1, 0, 0, 0, 1],
				[1, 0, 0, 0, 1],
				[0, 1, 0, 1, 0],
				[0, 0, 1, 0, 0],
				[0, 0, 1, 0, 0],
				[0, 0, 1, 0, 0],
				[0, 0, 1, 0, 0]],

		Z: [[1, 1, 1, 1, 1],
				[0, 0, 0, 0, 1],
				[0, 0, 0, 1, 0],
				[0, 0, 1, 0, 0],
				[0, 1, 0, 0, 0],
				[1, 0, 0, 0, 0],
				[1, 1, 1, 1, 1]],

		one: [[0, 0, 1, 0, 0],
					[0, 1, 1, 0, 0],
					[0, 0, 1, 0, 0],
					[0, 0, 1, 0, 0],
					[0, 0, 1, 0, 0],
					[0, 0, 1, 0, 0],
					[0, 1, 1, 1, 0]],

		two: [[0, 1, 1, 1, 0],
					[1, 0, 0, 0, 1],
					[0, 0, 0, 0, 1],
					[0, 0, 0, 1, 0],
					[0, 0, 1, 0, 0],
					[0, 1, 0, 0, 0],
					[1, 1, 1, 1, 1]],

		three: [[1, 1, 1, 1, 1],
						[0, 0, 0, 1, 0],
						[0, 0, 1, 0, 0],
						[0, 0, 0, 1, 0],
						[0, 0, 0, 0, 1],
						[1, 0, 0, 0, 1],
						[0, 1, 1, 1, 0]],

		four: [[0, 0, 0, 1, 0],
					 [0, 0, 1, 1, 0],
					 [0, 1, 0, 1, 0],
					 [1, 0, 0, 1, 0],
					 [1, 1, 1, 1, 1],
					 [0, 0, 0, 1, 0],
					 [0, 0, 0, 1, 0]],

		five: [[1, 1, 1, 1, 1],
					 [1, 0, 0, 0, 0],
					 [1, 1, 1, 1, 0],
					 [0, 0, 0, 0, 1],
					 [0, 0, 0, 0, 1],
					 [1, 0, 0, 0, 1],
					 [0, 1, 1, 1, 0]],

		six: [[0, 0, 1, 1, 0],
					[0, 1, 0, 0, 0],
					[1, 0, 0, 0, 0],
					[1, 1, 1, 1, 0],
					[1, 0, 0, 0, 1],
					[1, 0, 0, 0, 1],
					[0, 1, 1, 1, 0]],

		seven: [[1, 1, 1, 1, 1], 
						[0, 0, 0, 0, 1],
						[0, 0, 0, 1, 0],
						[0, 0, 1, 0, 0],
						[0, 1, 0, 0, 0],
						[0, 1, 0, 0, 0],
						[0, 1, 0, 0, 0]],

		eight: [[0, 1, 1, 1, 0],
						[1, 0, 0, 0, 1],
						[1, 0, 0, 0, 1],
						[0, 1, 1, 1, 0],
						[1, 0, 0, 0, 1],
						[1, 0, 0, 0, 1],
						[0, 1, 1, 1, 0]],

		nine: [[0, 1, 1, 1, 0],
					 [1, 0, 0, 0, 1],
					 [1, 0, 0, 0, 1],
					 [0, 1, 1, 1, 1],
					 [0, 0, 0, 0, 1],
					 [0, 0, 0, 1, 0],
					 [0, 1, 1, 0, 0]],

		zero: [[0, 1, 1, 1, 0],
					 [1, 0, 0, 0, 1],
					 [1, 0, 0, 1, 1],
					 [1, 0, 1, 0, 1],
					 [1, 1, 0, 0, 1],
					 [1, 0, 0, 0, 1],
					 [0, 1, 1, 1, 0]],

		colon: [[0, 0, 1, 0, 0],
						[0, 1, 1, 1, 0],
						[0, 0, 1, 0, 0],
						[0, 0, 0, 0, 0],
						[0, 0, 1, 0, 0],
						[0, 1, 1, 1, 0],
						[0, 0, 1, 0, 0]],

		space: [[0, 0, 0, 0, 0],
						[0, 0, 0, 0, 0],
						[0, 0, 0, 0, 0],
						[0, 0, 0, 0, 0],
						[0, 0, 0, 0, 0],
						[0, 0, 0, 0, 0],
						[0, 0, 0, 0, 0]]
	};

	this.getKey = function(key) {

		switch(key.toString()) {
		case "1":
			return "one";
			break;
		case "2":
			return "two";
			break;
		case "3": 
			return "three";
			break;
		case "4":
			return "four";
			break;
		case "5": 
			return "five";
			break;
		case "6":
			return "six";
			break;
		case "7":
			return "seven";
			break;
		case "8":
			return "eight";
			break;
		case "9": 
			return "nine";
			break;
		case "0":
			return "zero";
			break;
		case ":":
			return "colon";
			break;
		case " ":
			return "space";
			break;
		case "degree":
			return "degree";
		default:
			break;
		}

		if(key.length !== 1)
			return false;
		var letters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";

		for(var i = 0; i < letters.length; i++) {
			if(key.toUpperCase() === letters[i])
				return letters[i];
		}

		return false;
	};

	this.getMask = function(ch) {
		var key = this.getKey(ch);
		if(!key) {
			return false;
		}

		var mask = []

		for(var i = 0; i < this.char_sm[key].length; i++){
			var row = []
			for(var j = 0; j < this.char_sm[key][i].length; j++) {
				var rgb = {
					r: 255 * this.char_sm[key][i][j],
					g: 255 * this.char_sm[key][i][j],
					b: 255 * this.char_sm[key][i][j]
				}
				row.push(rgb);
			}
			mask.push(row);
		}
		return mask;
	};

	this.makeStringMask = function(str) {
		var strMask;

		if((typeof str) !== 'string' || str.length < 1) {
			return false;
		}

		strMask = this.getMask(str[0]);
		
		if(!Array.isArray(strMask)) {
			return false;
		}

		for(var i = 1; i < str.length; i++){
			var charMask = this.getMask(str[i]);

			if(!Array.isArray(charMask) || charMask.length !== strMask.length) {
				return false;
			}

			for(var y = 0; y < charMask.length; y++) {
				for(var x = 0; x < charMask[y].length; x++) {
					strMask[y].push(charMask[y][x]);
				}
			}
		}

		return strMask;
	};
}

window.clock.chars = new PixelChars();
